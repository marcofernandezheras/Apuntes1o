/*Alumno nuevo o repetidor*/
SELECT a.IdAlumno, IF(a.Repetidor = 0, "NUEVO" ,"REPETIDOR") 
FROM alumno a;

/*Edad de un Alumno*/
SELECT 
YEAR(CURDATE()) 
- 
YEAR(`FechaNacimientoComunidad`) 
+ IF(DATE_FORMAT(CURDATE(),'%m-%d') > DATE_FORMAT(`FechaNacimientoComunidad`,'%m-%d'), 0, -1)
AS `EDAD_ACTUAL` 
FROM `comunidadeducativa`;

/*Hora y fecha actuales*/
Select concat(
'Hoy es ',
DAYNAME(now()),
" ",
DAY(now()),
" de ",
MONTHNAME(now()),
" del año ",
YEAR(now()),
" y son las ",
HOUR(now()),
" horas y ",
MINUTE(now()),
" minutos y ",
SECOND(now()),
" segundos"
);

/*Municipios de una provincia*/
SELECT NombreMunicipio FROM municipio m, provincia p 
WHERE m.CodigoProvincia = p.CodigoProvincia 
AND NombreProvincia = 'Badajoz';

/*Provincia y municipio de un alumno con id x*/
SELECT NombreAlumno,ApellidosAlumno,NombreProvincia,NombreMunicipio 
FROM alumno a,municipio m,provincia p, codigopostal c 
WHERE c.CodigoPostal = a.CódigoPostalAlumno 
AND p.CodigoProvincia = m.CodigoProvincia 
AND m.IdMunicipio = c.IdMunicipio 
AND a.IdAlumno = 15;

/*Alumnos de 1º*/
SELECT ApellidosComunidad,NombreComunidad
FROM comunidadeducativa c, alumno a
where c.IdComunidad = a.IdAlumno 
and a.Curso = "1";

/*Delegado de 1º*/
SELECT ApellidosComunidad,NombreComunidad
FROM comunidadeducativa c, alumno a, curso cu
where c.IdComunidad = a.IdAlumno 
and a.IdAlumno = cu.IdDelegado
and a.Curso = "1";

/*Horario Por Dia*/
SELECT h.IdFranja as 'Clase',f.HoraInicio, f.HoraFin, m.NombreModulo 
from horario h, modulo m, diasemana s, franjahoraria f, curso c
where
h.IdModulo = m.IdModulo
and h.IdDiaSemana = s.IdDiaSemana
and h.IdFranja = f.IdFranja
and m.Curso = c.Curso
and c.Curso = '1'
and s.IdDiaSemana = 3;


/* 01 Lista de alumnos de primero ordenados por número alumno.*/
SELECT c.NombreComunidad, c.ApellidosComunidad
from comunidadeducativa c, alumno a
WHERE
c.IdComunidad = a.IdAlumno
and a.Curso = '1';

/* 02 Lista de Módulos de 1º ordenados por nombre. */
SELECT * from modulo where curso = '1' ORDER BY 2;

/* 03 Mostrar DNI y Nombre de los alumnos del ciclo que se llamen Carlos. */
SELECT c.DNIComunidad, c.NombreComunidad, c.ApellidosComunidad 
from comunidadeducativa c, alumno a
WHERE
a.IdAlumno = c.IdComunidad
and c.NombreComunidad = 'Carlos';

SELECT c.DNIComunidad, c.NombreComunidad, c.ApellidosComunidad 
from comunidadeducativa c, alumno a
WHERE
a.IdAlumno = c.IdComunidad
and c.NombreComunidad like '%Carlos%';

/* 04 Los alumnos del ciclo de una misma ciudad. */ç
SELECT c.NombreComunidad, c.ApellidosComunidad 
from comunidadeducativa c, alumno a, codigopostal cod, municipio mun
WHERE
a.IdAlumno = c.IdComunidad
and c.`CódigoPostalComunidad` = cod.CodigoPostal
and mun.IdMunicipio = cod.IdMunicipio
and mun.NombreMunicipio = 'Almendralejo';

/* 05 Las ciudades de los alumnos que están en el ciclo. */
SELECT DISTINCT mun.NombreMunicipio 
from comunidadeducativa c, alumno a, codigopostal cod, municipio mun
WHERE
a.IdAlumno = c.IdComunidad
and c.`CódigoPostalComunidad` = cod.CodigoPostal
and mun.IdMunicipio = cod.IdMunicipio;

/* 06 Los módulos de 1º con más de 5 Horas semanales. */
SELECT m.NombreModulo, m.HorasSemanales
from modulo m
WHERE
m.Curso = '1'
and m.HorasSemanales > 5;

/* 10 Los módulos cuyas horas totales del curso sean superiores a 100. */
SELECT m.NombreModulo, m.HorasAnuales
from modulo m
WHERE
m.Curso = '1'
and m.HorasAnuales > 100;

/* 11 Los módulos cuyas horas semanales estén comprendidas entre 5 y 7. */
SELECT m.NombreModulo, m.HorasSemanales
from modulo m
WHERE
m.Curso = '1'
and m.HorasSemanales BETWEEN 5 and 7;

/* 12 Realiza un traductor Español-Inglés. */

/* 07 Los módulos de 1º para un día de la semana. */
SELECT DISTINCT m.NombreModulo
from modulo m, diasemana d, horario h
WHERE
h.IdModulo = m.IdModulo
and h.IdDiaSemana = d.IdDiaSemana
and m.Curso = '1'
and d.IdDiaSemana = 1;

/* 08 Obten el horario de un curso. */
SELECT d.NombreDia, concat(f.HoraInicio," - ", f.HoraFinal) as 'Horario' , m.NombreModulo
from modulo m, horario h, franjahoraria f, diasemana d
WHERE
h.IdModulo = m.IdModulo
and h.IdDiaSemana = d.IdDiaSemana
and h.IdFranja = f.IdFranja
and m.Curso = '1'
ORDER BY d.IdDiaSemana,f.IdFranja;

/* 09 Muestras el Calendario del curso escolar 2013-14. */
SELECT d.NombreDia, c.NumeroDia, m.NombreMes, t.NombreTipoDia, if(m.IdMes>8, 2014,2015) as "Año"
from calendario c, mes m, tipodia t, diasemana d
where
c.IdMes = m.IdMes
and c.IdTipoDia = t.IdTipoDia
and c.IdDiaSemana = d.IdDiaSemana
order by 5,m.IdMes, c.NumeroDia

/* 13 A partir de un módulo muestra el profesor(es)que lo imparten. */
SELECT c.NombreComunidad 
from modulo m, profesor p, comunidadeducativa c
where
m.CodigoProfesor = p.IdProfesor
and c.IdComunidad = p.IdProfesor
and m.NombreModulo Like 'Base%'

/** Modulos de un profesor **/
SELECT m.NombreModulo
from modulo m, profesor p, comunidadeducativa c
WHERE
m.CodigoProfesor = p.IdProfesor
and c.IdComunidad = p.IdProfesor
and c.NombreComunidad LIKE 'Luciano%'

/* 14 Las clases de un determinado módulo en un día determinado. */
SELECT d.NombreDia, concat(f.HoraInicio," - ", f.HoraFinal) as 'Horario' , m.NombreModulo
from modulo m, horario h, franjahoraria f, diasemana d
WHERE
h.IdModulo = m.IdModulo
and h.IdDiaSemana = d.IdDiaSemana
and h.IdFranja = f.IdFranja
and m.NombreModulo Like 'Progrm%'
and d.IdDiaSemana  = 2
ORDER BY d.IdDiaSemana,f.IdFranja;

/* 15 Calcular las semanas para impartir cada módulo. */
SELECT m.NombreModulo, m.HorasAnuales / m.HorasSemanales as 'Semanas' from modulo m;

/* 16 ¿Qué días se imparte un determinado módulo? */
SELECT DISTINCT m.NombreModulo, d.NombreDia
from horario h, modulo m, diasemana d
WHERE
h.IdModulo = m.IdModulo
and h.IdDiaSemana = d.IdDiaSemana
and m.IdModulo = 1
order by d.IdDiaSemana;

/* 17 ¿Qué  días son lectivos en un mes determinado? */
SELECT d.NombreDia, c.NumeroDia, m.NombreMes, t.NombreTipoDia, if(m.IdMes>8, 2014,2015) as "Año"
from calendario c, mes m, tipodia t, diasemana d
where
c.IdMes = m.IdMes
and c.IdTipoDia = t.IdTipoDia
and c.IdDiaSemana = d.IdDiaSemana
and t.IdTipoDia = 6
order by 5,m.IdMes, c.NumeroDia

/* 18 El módulo que se imparte en un curso, de un día y a una hora. */
SELECT m.NombreModulo, d.NombreDia
from horario h, modulo m, diasemana d, franjahoraria f
WHERE
h.IdModulo = m.IdModulo
and h.IdFranja = f.IdFranja
and h.IdDiaSemana = d.IdDiaSemana
and m.Curso = '1'
and d.IdDiaSemana = 1
and f.IdFranja = 1
order by d.IdDiaSemana

/* copiar valores de modulo a imparte*/
INSERT INTO imparte (IdModulo,IdProfesor)  SELECT IdModulo,CodigoProfesor from modulo;

/* Profesores de un modulo*/
SELECT c.NombreComunidad, m.NombreModulo 
from comunidadeducativa c, profesor p, modulo m, imparte i
where c.IdComunidad = p.IdProfesor
and i.IdModulo = m.IdModulo
and i.IdProfesor = p.IdProfesor
and m.NombreModulo like "Sistemas Informáticos";

/* Horas por semana se imparten en primero */
SELECT SUM(m.HorasSemanales) as 'Total horas'
from modulo m
where m.Curso = 1;

/* Media diaria de horas de un módulo */
SELECT (SUM(m.HorasSemanales) / 5) as 'Media diaria'
from modulo m
where m.NombreModulo like "Bases%";

/*Numero de alumnos que no repiten */
SELECT COUNT(*)
from alumno a
where a.Repetidor = 0
and a.Curso = 1;

/* Count filas VS NULL */
SELECT COUNT(*) as 'Total filas', COUNT(c.EmailComunidad) as 'Total emails'
from comunidadeducativa c;

/* Maximo de horas semanales */
SELECT MAX(m.HorasSemanales) as 'Minimo' from modulo m;

/* Minimo de horas semanales */
SELECT MIN(m.HorasSemanales) as 'Minimo' from modulo m;

/* Media de edad de lo alumnos */
SELECT AVG(
YEAR(CURDATE()) 
- 
YEAR(`FechaNacimientoComunidad`) 
+ IF(DATE_FORMAT(CURDATE(),'%m-%d') > DATE_FORMAT(`FechaNacimientoComunidad`,'%m-%d'), 0, -1)
)
from comunidadeducativa c, alumno a
where c.IdComunidad = a.IdAlumno;

/* Edad máxima */
SELECT MAX(
YEAR(CURDATE()) 
- 
YEAR(`FechaNacimientoComunidad`) 
+ IF(DATE_FORMAT(CURDATE(),'%m-%d') > DATE_FORMAT(`FechaNacimientoComunidad`,'%m-%d'), 0, -1))
from comunidadeducativa c, alumno a
where c.IdComunidad = a.IdAlumno;

/* año mas pequeño */
SELECT MIN(YEAR(FechaNacimientoComunidad)) 
from comunidadeducativa c;

/* Total de alumnos de almendralejo */
SELECT COUNT(*) from comunidadeducativa c, alumno a, codigopostal cod
where c.IdComunidad = a.IdAlumno
and cod.CodigoPostal = "06200";

/* Copiar datos en tabla nueva */
CREATE TABLE pruebas 
SELECT DISTINCT r.FechaRealizacion, p.NombrePrueba, r.IdModulo, r.IdTipoPrueba , r.IdProfesor
from registarprueba r, prueba p
where r.IdNombrePrueba = p.IdPrueba;

Create table nota 
SELECT p.IdPrueba, r.IdAlumno, r.Nota from prueba p, registarprueba r
where p.FechaRealizacion = r.FechaRealizacion
and p.IdModulo = r.IdModulo
and p.IdTipoPrueba = r.IdTipoPrueba
and p.IdProfesor = r.IdProfesor;

/* Notas de sql de 10 de diciembre */
SELECT c.ApellidosComunidad, c.NombreComunidad, n.Nota
from comunidadeducativa c, prueba p , nota n
where
p.IdPrueba = n.IdPrueba
and n.IdAlumno = c.IdComunidad
and p.NombrePrueba like "%Sql%"
and p.FechaRealizacion like '2014-12-10%';

/* Email comunidad o del instituto si es null */
SELECT c.ApellidosComunidad, c.NombreComunidad, IFNULL(c.EmailComunidad,'harnina@h.es') 
from comunidadeducativa c;

/* Buscar y reemplazar @ por # en los email*/
SELECT  INSERT( c.EmailComunidad , INSTR( c.EmailComunidad , '@' ) , 1, '#' )  
FROM comunidadeducativa c;

/* Buscar y reemplazar @ por # en los email y cambiar los 'No tiene' por email del instituto*/
SELECT  
IF(c.EmailComunidad = 'No Tiene' ,
"harnina#h.es",
IFNULL(INSERT( c.EmailComunidad , INSTR( c.EmailComunidad , '@' ) , 1, '#' ), "harnina#h.es" )) 
FROM comunidadeducativa c;

/* Contar DNI con la letra H */
SELECT COUNT(c.DNIComunidad) 
FROM comunidadeducativa c 
where LOCATE('H',c.DNIComunidad ) != 0;

/* Descomponer Email */
SELECT c.EmailComunidad,LEFT(c.EmailComunidad, LOCATE("@",c.EmailComunidad) - 1) AS UserName, 
MID(c.EmailComunidad,
	(LOCATE("@",c.EmailComunidad) + 1),
	(LOCATE(".",c.EmailComunidad) -1  - LOCATE("@",c.EmailComunidad) )) AS Server,
RIGHT(c.EmailComunidad, LENGTH(c.EmailComunidad) - LOCATE(".",c.EmailComunidad) ) AS Dominio
from comunidadeducativa c
where c.EmailComunidad != "No tiene";

/* Comunidad educativa nacidos en año bisiesto */
SELECT * from comunidadeducativa c
where YEAR(c.FechaNacimientoComunidad)%4 = 0 
and (
	YEAR(c.FechaNacimientoComunidad) % 100 != 0 or 
	YEAR(c.FechaNacimientoComunidad) % 400 = 0
);

/* comunidad educativa con 20 años */
SELECT *
FROM `comunidadeducativa`

where YEAR(CURDATE()) 
- 
YEAR(`FechaNacimientoComunidad`) 
+ IF(DATE_FORMAT(CURDATE(),'%m-%d') > DATE_FORMAT(`FechaNacimientoComunidad`,'%m-%d'), 0, -1) = 20;

/* comunidad educativa con 20 años -> Alberto's Edition */
SELECT *
FROM `comunidadeducativa` c
where TIMESTAMPDIFF(year,c.FechaNacimientoComunidad,NOW()) = 20;

/* Nacidos en Diciembre */
SELECT *
FROM `comunidadeducativa` c
where MONTH(c.FechaNacimientoComunidad) = 12;

/* camel case inverso */
SELECT  CONCAT(LCASE(LEFT(c.NombreComunidad,1)) , UCASE(MID(c.NombreComunidad,2)))
FROM `comunidadeducativa` c;

/* Formato europeo de fecha */
SELECT  DATE_FORMAT(c.FechaNacimientoComunidad,'%d-%m-%Y')
FROM `comunidadeducativa` c;

/* Dia actual en formato Luciano */
SELECT  CONCAT(d.NombreDia," ",DAYOFWEEK(NOW())-1," de ",CONCAT(UCASE(LEFT(m.NombreMes,1)) , LCASE(MID(m.NombreMes,2)))) as `Dia de hoy` from
mes m, diasemana d
where  
MONTH(NOW()) = m.IdMes
and DAYOFWEEK(NOW())-1 = d.IdDiaSemana;

/* Nacidos en Viernes, Sabado, Domingo */
SELECT  c.NombreComunidad from comunidadeducativa c
where WEEKDAY(c.FechaNacimientoComunidad) in (4,5,6)

/* 1.- Examen "facil": ¿Cuantos alumnos de una poblacion determinada?*/
Select COUNT(*) 
from comunidadeducativa c , alumno a, municipio m, codigopostal cod
where c.IdComunidad = a.IdAlumno
and c.`CódigoPostalComunidad` = cod.CodigoPostal
and m.IdMunicipio = cod.IdMunicipio
and m.NombreMunicipio = 'almendralejo';

/* 2.- Examen "facil": Profesores de un curso */
Select DISTINCT c.NombreComunidad 
from comunidadeducativa c, curso cu, modulo m, imparte im
where c.IdComunidad = im.IdProfesor
and im.IdModulo = m.IdModulo
and m.Curso = 1;

/* 3.- Examen "facil": dias de clase 'dia normal' en un dia de semana para un mes determinado */
Select COUNT(*) from tipodia t, calendario c, diasemana d, mes m
where c.IdDiaSemana = d.IdDiaSemana
and c.IdTipoDia = t.IdTipoDia
and c.IdMes = m.IdMes
and t.NombreTipoDia = "Dia normal"
and m.MesFances = "décembre"
and d.DiaFrances = "Lundi";

/* 1.- Examen dificil */
SELECT COUNT(*) AS `Dias de vacaciones en Navidad` 
from tipodia t, mes m, calendario c
where c.IdTipoDia = t.IdTipoDia
and c.IdMes = m.IdMes
and t.NombreTipoDia = "Vacaciones"
and (m.NombreMes = "diciembre" or m.NombreMes = "enero");

/* 2.- Examen dificil */
SELECT  
pr.NombrePrueba AS "Nombre de la prueba",
co.NombreComunidad AS "Profesor",
mo.NombreModulo AS "Nombre del módulo"
from comunidadeducativa co, curso cu, evaluacion ev, prueba pr, modulo mo
where pr.IdProfesor = co.IdComunidad
and pr.IdModulo = mo.IdModulo
and ev.IdEvaluacion = 1
and cu.Curso = 1
and pr.FechaRealizacion BETWEEN ev.FechaInicio AND ev.FechaFin;

/* 3.- Examen dificil */
SELECT 
mo.NombreModulo AS "Módulo",
pr.NombrePrueba AS "Nombre de la prueba",
DATE_FORMAT(pr.FechaRealizacion,'%d-%m-%Y') AS "Fecha de realización",
co.ApellidosComunidad AS "Apellidos del alumno",
co.NombreComunidad AS "Nombre del alumno",
n.Nota AS "Nota obtenida"
FROM
mes me, nota n, modulo mo, comunidadeducativa co, prueba pr, curso cu
where pr.IdModulo = mo.IdModulo
and mo.Curso = cu.Curso
and n.IdAlumno = co.IdComunidad
and me.NombreMes = "diciembre"
and cu.Curso = 1
ORDER by 1,2,3,4,5,6;

/* Alumnos que han faltado hoy */
SELECT CONCAT(c.ApellidosComunidad,", ", c.NombreComunidad)
from falta f, comunidadeducativa c
where f.IdAlumno = c.IdComunidad
and f.FechaFalta = DATE(NOW());

/* Alumnos que han faltado todo el dia de hoy*/
SELECT CONCAT(c.ApellidosComunidad,", ", c.NombreComunidad), fr.IdFranja
from falta f, comunidadeducativa c, franjahoraria fr
where f.IdAlumno = c.IdComunidad
and f.FechaFalta = DATE(NOW())
and f.IdFranjaHoraria = 7;


/*******************************************************************************************/
/* Modulo al que han faltado hoy los alumnos de 1º */
SELECT c.ApellidosComunidad, c.NombreComunidad, m.NombreModulo, f.FechaFalta
from falta f, comunidadeducativa c, modulo m, horario h
where 
/**---------------- relacion faltas-otras_tablas---------------- **/
 f.IdAlumno = c.IdComunidad
and f.IdFranjaHoraria = h.IdFranja

/**------------------------ dia de hoy ------------------------**/
and date(f.FechaFalta) = date(NOW())

/**---------------- relacion modulo-horario ----------------**/
and m.IdModulo = h.IdModulo
and h.IdDiaSemana = (WEEKDAY(NOW()) + 1) /* <--- arreglar desfase, WEEKDAY empieza en 0 */

and m.Curso = 1;

/*******************************************************************************************/

/* Alumnmos con base de datos convalidada*/
SELECT c.ApellidosComunidad, c.NombreComunidad from
convalida con, comunidadeducativa c, modulo m
where
con.IdAlumno = c.IdComunidad
and con.IdModulo = m.IdModulo
and con.AprobadoCursoAnterior = 0
and m.NombreModulo like "base%dato%"

/* Modulo con menor número de horas */
SELECT m.NombreModulo from modulo m
where m.HorasSemanales =  (Select MIN(m.HorasSemanales) from modulo m);

/* Modulos superior a la media de horas semanales*/
SELECT m.NombreModulo from modulo m
where m.HorasSemanales > (SELECT AVG(m.HorasSemanales) from modulo m)


/* 9.	Los alumnos que faltaron en Noviembre en el módulo Base de datos. */
Select IdAlumno, IdFranjaHoraria, WEEKDAY(FechaFalta) from falta f
where MONTH(f.FechaFalta) = 11
and  
	WEEKDAY(f.FechaFalta) + 1 in (
					Select h.IdDiaSemana from horario h
					where h.IdModulo = 2)

and (  
	f.IdFranjaHoraria in (Select h.IdFranja from horario h where h.IdModulo = 2)
	or f.IdFranjaHoraria = 7
 );

/* 10.	Los alumnos que faltaron en Octubre en jornada completa. */
SELECT * from falta f, comunidadeducativa c
where 
f.IdAlumno = c.IdComunidad
and MONTH(FechaFalta) = 11
and f.IdFranjaHoraria = 7;

/* 11.	Total de faltas a jornada completa en Diciembre. */
SELECT count(*) from falta f, comunidadeducativa c
where 
f.IdAlumno = c.IdComunidad
and MONTH(FechaFalta) = 12
and f.IdFranjaHoraria = 7;

/* 12.	Cuantos alumnos tienen  aprobado del año anterior un módulo determinado. */
SELECT count(*) from
convalida con, comunidadeducativa c, modulo m
where
con.IdAlumno = c.IdComunidad
and con.IdModulo = m.IdModulo
and con.AprobadoCursoAnterior = 1
and m.NombreModulo like "%marc%";

/* 13.	¿Qué días de la semana se imparte un módulo?. */
SELECT DISTINCT d.NombreDia from
modulo m, horario h, diasemana d
where h.IdModulo = m.IdModulo
and m.NombreModulo like "%marca%"
and h.IdDiaSemana = d.IdDiaSemana;

/* 14.	El módulo con mayor número de falta en un mes determinado */
/* 15.	El alumno que más faltó en un mes determinado. */
/* 16.	Cuantos fines de semanas (Sábados y Domingo) tiene un mes determinado */
/* 17.	El mes con mayor número de días lectivos. */
/* 18.	El mes de inicio y el último mes de una evaluación determinada. */

/* Contabilizar el número de alumno por curso */
SELECT Curso, count(*) as "Alumnos por curso" from alumno group by Curso

/* Número de alumnos de primero por año de nacimiento */
SELECT 
(year(c.FechaNacimientoComunidad)) as "Año de nacimiento", 
count(*) from comunidadeducativa c, alumno a
where c.IdComunidad = a.IdAlumno
and a.Curso = 1
group by (year(c.FechaNacimientoComunidad));


/* Contabilizar el número de municipios por provincias */
Select p.NombreProvincia, count(*) from municipio m,  provincia p
where p.CodigoProvincia = m.CodigoProvincia
GROUP by m.CodigoProvincia;

/* Contabilizar el número de municipios por provincias de Extremadura. */
Select p.NombreProvincia, count(*) from municipio m,  provincia p
where p.CodigoProvincia = m.CodigoProvincia
and p.NombreProvincia in ("Badajoz","Cáceres")
GROUP by m.CodigoProvincia

/* La provincia con mayor número de municipios */
Select p.NombreProvincia, count(*) from municipio m,  provincia p
where p.CodigoProvincia = m.CodigoProvincia
GROUP by m.CodigoProvincia
HAVING count(*) >= ALL( 
	Select count(*) from municipio m,  provincia p
	where p.CodigoProvincia = m.CodigoProvincia
	GROUP by m.CodigoProvincia
)	


/* Municipio con mayor numero de codigos postales */
SELECT m.NombreMunicipio, COUNT(*) as numero from codigopostal c ,municipio m
where c.IdMunicipio = m.IdMunicipio
GROUP by c.IdMunicipio
HAVING numero >= ALL(
	SELECT COUNT(*) from codigopostal c 
	GROUP by c.IdMunicipio)
order by numero DESC

/* Mes con mayor numero de dias lectivos */
Select m.NombreMes, count(*) as numero from calendario c , mes m
where c.IdTipoDia = 6
and c.IdMes = m.IdMes
GROUP by c.IdMes
HAVING numero >= ALL(
	Select count(*) from calendario c 
	where c.IdTipoDia = 6
	GROUP by c.IdMes)

/* Faltas parciales */
Select f.FechaFalta as fecha, f.IdAlumno as alumno, h.IdDiaSemana as DiaSemana,
h.IdFranja as franja, h.IdModulo as modulo
from falta f, horario h, modulo m
where 
h.IdFranja = f.IdFranjaHoraria
and h.IdModulo = m.IdModulo
and (DAYOFWEEK(f.FechaFalta) - 1) = h.IdDiaSemana
and m.Curso = 1
order by 2,4;

/* Descomponer faltas totales en parciales */
Select f.FechaFalta as fecha, f.IdAlumno as alumno, h.IdDiaSemana as DiaSemana,
h.IdFranja as franja, h.IdModulo as modulo
from falta f, horario h, modulo m
where 
f.IdFranjaHoraria = 7
and h.IdModulo = m.IdModulo
and (DAYOFWEEK(f.FechaFalta) - 1) = h.IdDiaSemana
and m.Curso = 1
order by 2,4;

/* 1.	El alumno que más faltó a jornada completa en un mes determinado. */
Select c.NombreComunidad, c.ApellidosComunidad, Count(*) 
from falta f, comunidadeducativa c 
where f.IdFranjaHoraria = 7
and f.IdAlumno = c.IdComunidad
group by f.IdAlumno
	HAVING Count(*) >= ALL(
	Select Count(*) 
	from falta f
	where f.IdFranjaHoraria = 7
	group by f.IdAlumno
);

/* 2.	Alumnos de primero agrupados por ciudades */
SELECT m.NombreMunicipio,cod.CodigoPostal, count(*) as "Numero de alumnos"
from comunidadeducativa c, alumno a, codigopostal cod, municipio m
where c.IdComunidad = a.IdAlumno
and c.`CódigoPostalComunidad` = cod.CodigoPostal
and cod.IdMunicipio = m.IdMunicipio
and a.Curso = 1
group by c.`CódigoPostalComunidad`;

/* 3.	Alumnos agrupados por edades con su cuenta */
SELECT Year(now()) - Year(c.FechaNacimientoComunidad), count(*) from comunidadeducativa c, alumno a
where c.IdComunidad = a.IdAlumno
GROUP by Year(c.FechaNacimientoComunidad)
order by 1;

/* 4.	El módulo con mayor número de faltas(faltas parciales) en un mes determinado */
Select modulo, count(*) from (
	Select f.FechaFalta as fecha, f.IdAlumno as alumno, h.IdDiaSemana as DiaSemana,
	h.IdFranja as franja, h.IdModulo as modulo
	from falta f, horario h, modulo m
	where 
	h.IdFranja = f.IdFranjaHoraria
	and h.IdModulo = m.IdModulo
	and (DAYOFWEEK(f.FechaFalta) - 1) = h.IdDiaSemana
	and m.Curso = 1
	and MONTH(f.FechaFalta)=10
	
	UNION
	
	Select f.FechaFalta as fecha, f.IdAlumno as alumno, h.IdDiaSemana as DiaSemana,
	h.IdFranja as franja, h.IdModulo as modulo
	from falta f, horario h, modulo m
	where 
	f.IdFranjaHoraria = 7
	and h.IdModulo = m.IdModulo
	and (DAYOFWEEK(f.FechaFalta) - 1) = h.IdDiaSemana
	and m.Curso = 1
	and MONTH(f.FechaFalta)=10
) as tabla
group by modulo
having count(*) >= ALL(Select  count(*) from (
	Select f.FechaFalta as fecha, f.IdAlumno as alumno, h.IdDiaSemana as DiaSemana,
	h.IdFranja as franja, h.IdModulo as modulo
	from falta f, horario h, modulo m
	where 
	h.IdFranja = f.IdFranjaHoraria
	and h.IdModulo = m.IdModulo
	and (DAYOFWEEK(f.FechaFalta) - 1) = h.IdDiaSemana
	and m.Curso = 1
	and MONTH(f.FechaFalta)=10
	
	UNION
	
	Select f.FechaFalta as fecha, f.IdAlumno as alumno, h.IdDiaSemana as DiaSemana,
	h.IdFranja as franja, h.IdModulo as modulo
	from falta f, horario h, modulo m
	where 
	f.IdFranjaHoraria = 7
	and h.IdModulo = m.IdModulo
	and (DAYOFWEEK(f.FechaFalta) - 1) = h.IdDiaSemana
	and m.Curso = 1
	and MONTH(f.FechaFalta)=10
) as tabla group by modulo)


/* 5.	El alumno que más faltó a jornada completa en un mes determinado. */
Select c.NombreComunidad, c.ApellidosComunidad, Count(*) 
from falta f, comunidadeducativa c 
where f.IdFranjaHoraria = 7
and f.IdAlumno = c.IdComunidad
group by f.IdAlumno
	HAVING Count(*) >= ALL(
	Select Count(*) 
	from falta f
	where f.IdFranjaHoraria = 7
	group by f.IdAlumno
);

/* 6.	El mes con mayor número de días lectivos.  */
Select m.NombreMes , count(*) from calendario c, mes m
where  c.IdMes = m.IdMes
and c.IdTipoDia = 6
group by c.IdMes
HAVING count(*) >= ALL(
	Select count(*) from calendario c
	where c.IdTipoDia = 6
	group by c.IdMes
)

/* 7.	La(s) comunidad(es) con menor número de provincias */
Select c.NombreComunidad, Count(*) from comunidadautonoma c, provincia p
where p.IdComunidad = c.IdComunidad
group by p.IdComunidad
HAVING Count(*) <= ALL(
	Select Count(*) from comunidadautonoma c, provincia p
	where p.IdComunidad = c.IdComunidad
	group by p.IdComunidad
)

/* 8.	La(s) comunidad(es) con dos provincias */
Select c.NombreComunidad, Count(*) from comunidadautonoma c, provincia p
where p.IdComunidad = c.IdComunidad
group by p.IdComunidad
HAVING Count(*) = 2

/* 9.	La(s) comunidad(es) cuyo número de provincias es superior o igual a la media. */
Select c.NombreComunidad, Count(*) from comunidadautonoma c, provincia p
where p.IdComunidad = c.IdComunidad
group by p.IdComunidad
HAVING Count(*) >= (
	Select avg(cuenta.total) from (
		SELECT count(*) as total from comunidadautonoma c, provincia p
		where p.IdComunidad = c.IdComunidad
		group by p.IdComunidad) as cuenta
    )

/* Crear vista de los alumnos de primero ordenados por apellido */
CREATE VIEW alumnosPrimero(alumno) as 
SELECT Concat(c.ApellidosComunidad,", ",c.NombreComunidad) 
from comunidadeducativa c, alumno a
where
c.IdComunidad = a.IdAlumno
and a.Curso = 1
ORDER BY c.ApellidosComunidad;